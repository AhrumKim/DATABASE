import java.beans.Statement;
import java.sql.DriverManager;
import java.util.Scanner;

import org.mariadb.jdbc.Connection;

/*
JDBC작업

1.select
1.1 결과 집합 생성

2. insert, update,delete
2.1 결과 집합 생성 없어요(X) >> resultSet(x)
2.2 반영결과 return (반영된 행의 수) >> update 5건 수정 >> return 5;

ex)
update emp set sal=0; >> 실행>> update 14건 >> return 14


>> 업무 처리 >> JDBC
 */
public class Ex03_Oracle_DML_insert {

	public static void main(String[] args) {
		 Connection conn = null;
		 Statement stmt = null;
		 
		 try {
			 //드라이버로딩 생략
			 
			 // 연결객체 생성
			 conn = (Connection) DriverManager.getConnection("jdbc:mariadb://127.0.0.1:3306/kosadb","kosa","1004");
			 stmt =  conn.createStatement();
			 
			 //INSERT
			 int empno=0;
			 String ename = null;
			 int deptno=0;
			 
			 Scanner sc = new Scanner(System.in);
			 System.out.println("사번입력:");
			 empno = Integer.parseInt(sc.nextLine());
			
			 //insert into dmplemp(empno, ename, deptno) values(100, '홍길동',10)
			 //전통적이고 고전적인 방법
			 String sql ="insert into dmplem(empn,ename, deptno)";
			 	sql+="values("+ empno +"," + ename + ","+deptno +")";
			 	//이 방법을 사용했어요 실개발(오타작렬)
			 	System.out.println(sql);
			 	
			 	//현재 values(?,?,?)  ? 한개 parameter
			 	//executeUpdate()함수 (insert, update, delete) 수행
			 	
			 	int reslutrow=((java.sql.Statement) stmt).executeUpdate(sql);
			 	
			 	if(reslutrow>0) {
			 		System.out.println("반영된 행의 수 : " + reslutrow);
			 	}else {
			 		System.out.println("예외가 발생된 것이 아니고 : 반영된 행이 없다");
			 		
			 	}
			 	
			 	
		 }catch(Exception e){
			 //문제 발생 ... 고민 처리
			 System.out.println("SQL 예외발생: " + e.getMessage());
	}finally {
		//간제 실행 블럭 사용
		//자원 해제
		try {
			stmt.clone();
		}catch(Exception e2) {
			
		}
	}

	}

}



